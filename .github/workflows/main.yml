name: Java CI Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main]

jobs:
  # Job para configurar o ambiente (MongoDB)
  setup_mongodb:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: rootuser
          MONGO_INITDB_ROOT_PASSWORD: rootpass

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar o JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

  # Job para build
  build:
    runs-on: ubuntu-latest
    needs: setup_mongodb  # O job de build depende do job anterior
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar o JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build com Maven
        run: mvn clean install

  # Job para rodar os testes
  test:
    runs-on: ubuntu-latest
    needs: setup_mongodb  # O job de testes depende do job de build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar o JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Rodar testes
        run: mvn clean test -DskipTests=false

  # Job para limpar após a execução
  cleanup:
    runs-on: ubuntu-latest
    needs: test  # O job de cleanup depende do job de teste
    steps:
      - name: Limpeza pós-execução
        run: echo "Limpeza após os testes"
